{"version":3,"sources":["logo.svg","Pages/Fivedays.js","Pages/Current.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Fivedays","props","downloadTxtFile","element","document","createElement","newResult","i","info","length","concat","region","singleDay","next_days","j","row","name","description","min_temperature","max_temperature","console","log","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","state","data","this","location","days","daysFull","temps","maxTemps","minTemps","weather","icons","displayIndex","className","style","justifyContent","map","day","index","onClick","setState","id","overflowY","width","borderLeft","weather_data","display","marginLeft","height","React","Component","Current","useHistory","useState","cityName","setCityName","cities","setCities","allCities","setAllCities","results","setResults","openKey","setOpenKey","appiName","setApiName","apiKey","setApiKey","toggle","setToggle","showFile","e","a","preventDefault","reader","FileReader","onload","text","target","result","lines","split","cityArray","line","push","replace","Math","random","value","readAsText","files","totalList","axios","get","city","then","res","sunriseObject","Date","list","sunrise","timezone","sunsetObject","sunset","getUTCHours","getUTCMinutes","response","Promise","resolve","reject","post","City","responseData","JSON","parse","cityWeatherData","celsius","temp_now","ferinheight","humidity","takss","winddeg","windspeed","wind","catch","TownWeather","round","main","temp","toString","speed","deg","color","src","alt","onChange","padding","verticalAlign","minWidth","paddingLeft","promises","method","url","all","weatherResults","alpha","error","window","alert","filteredCities","filter","c","exportArray","forEach","customStr","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9ab4b2b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react'\r\nimport axios from 'axios'\r\nimport './css/fivedays.css';\r\nimport '../App.css';\r\nclass Fivedays extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        data: [],\r\n        // location:props.info.map(i=>{\r\n        //   return i.name\r\n        // }) ,\r\n        // days: [],\r\n        // dayName:[],\r\n        // fullData:[],\r\n        // daysFull: [],\r\n        // temps: [],\r\n        // minTemps: [],\r\n        // maxTemps: [],\r\n        // weather: [],\r\n        // icons: [],\r\n        // displayIndex: 0\r\n      };\r\n    }\r\n    downloadTxtFile = () => {\r\n    var arr = []\r\n    var arr2 = []\r\n    const element = document.createElement('a')\r\n    // var b = document.getElementById('result').innerText\r\n    // var a = document.getElementById('L_result').innerText\r\n    // let cities = a.split('\\n')\r\n    // console.log('a is', a,cities)\r\n    // console.log('b is',this.state.fullData)\r\n    // console.log('days are', this.state.dayName)\r\n    let newResult = \"\"\r\n    // for(let i=0;i<this.state.fullData.length;i++) {\r\n    //   newResult = newResult.concat(this.state.location[i] + \" = [\")\r\n    //   const singleDay = this.state.fullData[i]\r\n    //   for(let j=0;j<singleDay.length;j++) {\r\n    //     const row = '\"' + this.state.dayName[j]+ '\"' + ',\"' + singleDay[j].weather[0] + '\"' +  ',\"' +singleDay[j].minTemps[0] + '\"' + ',\"'+ singleDay[j].maxTemps[0]+ '\"' + \"\"\r\n    //     newResult = newResult.concat(row)\r\n    //   }\r\n    //   newResult = newResult.concat(\" ]\\n\")\r\n    // }\r\n    for(let i=0;i<this.props.info.length;i++) {\r\n      newResult = newResult.concat(this.props.info[i].region + \" = [\")\r\n      const singleDay = this.props.info[i].next_days;\r\n      for(let j=0;j<singleDay.length;j++) {\r\n        const row = '\"' + singleDay[j].name+ '\"' + ',\"' + singleDay[j].description + '\"' +  ',\"' +singleDay[j].min_temperature + '\"' + ',\"'+ singleDay[j].max_temperature+ '\"' + \"\"\r\n        newResult = newResult.concat(row)\r\n      }\r\n      newResult = newResult.concat(\" ]\\n\")\r\n    }\r\n    console.log(\"new result is\",newResult)\r\n    \r\n    // arr2 = b.split('\\n')\r\n\r\n    // var i = 1\r\n    // var j = 1\r\n    // var count = 0\r\n    // arr = arr.filter(function (el) {\r\n    //   return el != null\r\n    // })\r\n    // arr2 = arr2.filter(function (el) {\r\n    //   return el != null\r\n    // })\r\n\r\n    // var endResult = ''\r\n    // console.log(arr2[12])\r\n    // for (i = 0; i < arr.length; i++) {\r\n    //   endResult = endResult.concat(arr[i] + '=')\r\n    //   for (j = count; j < arr2.length; j++) {\r\n    //     if (j % 5 === 0) {\r\n    //       endResult = endResult.concat('[')\r\n    //     }\r\n    //     if ((j + 1) % 5 !== 0 || j === 0) {\r\n    //       endResult = endResult.concat('\"' + arr2[j] + '\",')\r\n    //     } else if ((j + 1) % 5 === 0) {\r\n    //       endResult = endResult.concat('\"' + arr2[j] + '\"')\r\n    //     } else {\r\n    //       endResult = endResult.concat('\"' + arr2[j] + '\",')\r\n    //     }\r\n    //     if (j % 4 === 0 && j !== 0 && j < 2) {\r\n    //       endResult = endResult.concat(']\\n')\r\n    //       count++\r\n    //       break\r\n    //     }\r\n    //     if (j >= 2 && (j + 1) % 5 === 0 && j !== 0) {\r\n    //       endResult = endResult.concat(']\\n')\r\n    //       count++\r\n    //       break\r\n    //     }\r\n\r\n    //     count++\r\n    //   }\r\n    // }\r\n\r\n    const file = new Blob([newResult], {\r\n      type: 'text/html',\r\n    })\r\n    element.href = URL.createObjectURL(file)\r\n    element.download = 'myFile.txt'\r\n    document.body.appendChild(element) // Required for this to work in FireFox\r\n    element.click()\r\n  }\r\n    // fetchData = () => {\r\n    //   let promises=[]\r\n    //   let arr=[]\r\n    //   this.state.location.map(city=>{\r\n    //     const url = this.buildUrlApi(city)  \r\n    //     promises.push(axios.get(url))\r\n    //   })\r\n    //   Promise.all(promises)\r\n    //   .then(response=>{\r\n    //     console.log(\"********\");\r\n    //     console.log(response);\r\n    //     for(let i=0;i<response.length;i++){\r\n    //       arr.push(response[i])\r\n    //     }\r\n    //     this.setState({\r\n    //       data:arr\r\n    //     },()=>{\r\n    //       const current = this.state.data.map(e=>{\r\n    //         return this.currentData(e);\r\n            \r\n    //       })\r\n    //       console.log(\"hello1212\",current)\r\n    //       const abc= current.map(singleCity =>{\r\n    //         const allWeather = singleCity.map(cityWeather =>  this.getDays(cityWeather))\r\n    //         return allWeather\r\n    //       })\r\n    //       const checkDays=abc[0]\r\n    //       const dayNames=checkDays.map(e=>{\r\n    //         return e.daysFull[0]\r\n    //       })\r\n\r\n    //       this.setState({\r\n    //         fullData:abc,\r\n           \r\n    //       })\r\n    //       this.setState({\r\n    //         dayName:dayNames\r\n    //       },()=>{\r\n    //         console.log(\"state days\",this.state.dayName)\r\n    //       })\r\n    //       console.log(\"abc\",abc)\r\n    //       console.log(\"days\",dayNames)\r\n          \r\n          \r\n    //     })\r\n    //   })\r\n    //   .catch(error=>{\r\n    //     console.log(error)\r\n    //   })\r\n      \r\n        \r\n\r\n    //     // this.setState({\r\n    //     //   days: [currentDay, ...days.slice(1)],\r\n    //     //   daysFull: [currentDayFull, ...daysFull.slice(1)],\r\n    //     //   temps: [currentTemp, ...temps.slice(1)],\r\n    //     //   minTemps: [currentMinTemp, ...minTemps.slice(1)],\r\n    //     //   maxTemps: [currentMaxTemp, ...maxTemps.slice(1)],\r\n    //     //   weather: [currentWeather, ...weather.slice(1)],\r\n    //     //   icons: [currentIcon, ...icons.slice(1)]\r\n    //     // });\r\n     \r\n    // };\r\n    // getDays=(currentData)=>{\r\n    //   const windDeg=currentData.wind.deg\r\n    //   const windSpeed=currentData.wind.speed\r\n      \r\n\r\n    //   const dayOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    //     const dayOfWeekFull = [\r\n    //       \"Sunday\",\r\n    //       \"Monday\",\r\n    //       \"Tuesday\",\r\n    //       \"Wednesday\",\r\n    //       \"Thursday\",\r\n    //       \"Friday\",\r\n    //       \"Saturday\"\r\n    //     ];\r\n    //     const currentDay = \"Today\";\r\n    //     const currentDayFull =\r\n    //       dayOfWeekFull[new Date(currentData.dt_txt).getDay()];\r\n    //     const currentTemp = Math.round(currentData.main.temp);\r\n    //     const currentMinTemp = Math.round(currentData.main.temp_min);\r\n    //     const currentMaxTemp = Math.round(currentData.main.temp_max);\r\n    //     const currentWeather =\r\n    //       currentData.weather[0].main === \"Clouds\"\r\n    //         ? \"Cloudy\"\r\n    //         : currentData.weather[0].main;\r\n    //     const currentIcon = this.convertWeatherIcons(currentData.weather[0].main);\r\n  \r\n    //     const days = [];\r\n    //     const daysFull = [];\r\n    //     const temps = [];\r\n    //     const minTemps = [];\r\n    //     const maxTemps = [];\r\n    //     const weather = [];\r\n    //     const icons = [];\r\n    //     for (let i = 0; i < currentData.length; i++) {\r\n    //       let date = new Date(currentData[i].dt_txt);\r\n    //       let day = dayOfWeek[date.getDay()];\r\n    //       let dayFull = dayOfWeekFull[date.getDay()];\r\n    //       days.push(day);\r\n    //       daysFull.push(dayFull);\r\n    //       temps.push(Math.round(currentData[i].main.temp));\r\n    //       minTemps.push(currentData[i].main.temp_min);\r\n    //       maxTemps.push(currentData[i].main.temp_max);\r\n    //       weather.push(currentData[i].weather[0].main);\r\n    //     }\r\n    //     return {\r\n    //       days: [currentDay, ...days.slice(1)],\r\n    //       daysFull: [currentDayFull, ...daysFull.slice(1)],\r\n    //       temps: [currentTemp, ...temps.slice(1)],\r\n    //       minTemps: [currentMinTemp, ...minTemps.slice(1)],\r\n    //       maxTemps: [currentMaxTemp, ...maxTemps.slice(1)],\r\n    //       weather: [currentWeather, ...weather.slice(1)],\r\n    //       icons: [currentIcon, ...icons.slice(1)],\r\n    //       WindDeg: [windDeg],\r\n    //       WindSpeed: [windSpeed]\r\n    //     }\r\n    // }\r\n  \r\n    // buildUrlApi = (cityName) => {\r\n    //   const location = encodeURIComponent(cityName);\r\n    //   const urlPrefix = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\n    //   const urlSuffix = \"&APPID=fb1158dc7dfef5f0967ceac8f71ee3a6&units=metric\";\r\n  \r\n    //   return [urlPrefix, location, urlSuffix].join(\"\");\r\n    // };\r\n  \r\n    // currentData = (e) => {\r\n    //   console.log(new Date(e.data.list[0].dt_txt).getDate());\r\n    //   const list = e.data.list;\r\n    //   var min=100;\r\n    //   var max=0;\r\n    //   var  newData=[];\r\n    //   e.data.list.forEach((element,index) => {\r\n    //     if(element.main.temp_min<min)\r\n    //     {\r\n    //       min=element.main.temp_min;\r\n    //     }\r\n    //    if(element.main.temp_max>max){\r\n    //       max=element.main.temp_max;\r\n    //     }\r\n    //     if((index+1)%7===0 && index!==0)\r\n    //     {\r\n    //       newData.push({\r\n    //         min:min,\r\n    //         max:max\r\n    //       });\r\n    //       min=100;\r\n    //       max=0;\r\n    //     }\r\n    //       console.log(element);        \r\n    //   });\r\n    //   console.log(newData);\r\n    //   const data = e.data.list.filter((single, index) => index!== e.data.list.length-1 && (new Date(single.dt_txt).getDate() !== new Date(e.data.list[index+1].dt_txt).getDate()))\r\n    //   console.log('data is', data);\r\n    //   data.forEach((element,index) => {\r\n    //     element.main.temp_min=newData[index].min;\r\n    //     element.main.temp_max=newData[index].max;\r\n    //   });\r\n    //   console.log(\"latest\");\r\n    //     console.log(data)\r\n    //   return data\r\n    // };\r\n  \r\n    // computeNearestHr = () => {\r\n    //   const currentTimeInHrs = new Date().getHours();\r\n    //   const constHrs = [0, 3, 6, 9, 12, 15, 18, 21];\r\n    //   const differences = constHrs.map(e => Math.abs(e - currentTimeInHrs));\r\n    //   const indexofLowestDiff = differences.indexOf(Math.min(...differences));\r\n  \r\n    //   return constHrs[indexofLowestDiff];\r\n    // };\r\n  \r\n    // convertWeatherIcons = weather => {\r\n    //   switch (weather) {\r\n    //     case \"Clear\":\r\n    //       return \"circle-outline\";\r\n    //     case \"Clouds\":\r\n    //       return \"weather-cloudy\";\r\n    //     case \"Snow\":\r\n    //       return \"weather-snowy\";\r\n    //     case \"Rain\":\r\n    //       return \"weather-pouring\";\r\n    //     case \"Drizzle\":\r\n    //       return \"weather-pouring\";\r\n    //     case \"Thunderstorm\":\r\n    //       return \"weather-lightning-rainy\";\r\n    //     default:\r\n    //       return \"weather-cloudy\";\r\n    //   }\r\n    // };\r\n  \r\n    // componentDidMount() {\r\n    //   // let a=[]\r\n    //   // this.props.info.map(city=>{\r\n    //   //     a.push(city.name)\r\n    //   // })\r\n    //   // this.setState(\r\n    //   //   {\r\n    //   //     location: a\r\n    //   //   })\r\n    //   //   console.log(this.state.location)\r\n    //   this.fetchData();\r\n\r\n    // }\r\n  \r\n    // handleFocus = e => {\r\n    //   e.target.select();\r\n    // }\r\n    \r\n    // changeLocation = e => {\r\n    //   e.preventDefault();\r\n    //   const inputLocation = this.locationInput.value;\r\n    //   this.setState(\r\n    //     {\r\n    //       location: inputLocation\r\n    //     },\r\n    //     () => {\r\n    //       this.fetchData();\r\n    //     }\r\n    //   );\r\n    // };\r\n  \r\n    // setIndex = index => {\r\n    //   this.setState({\r\n    //     displayIndex: index\r\n    //   });\r\n    // };\r\n  \r\n    render() {\r\n      const {\r\n        location,\r\n        days,\r\n        daysFull,\r\n        temps,\r\n        maxTemps,\r\n        minTemps,\r\n        weather,\r\n        icons,\r\n        displayIndex\r\n      } = this.state;\r\n        console.log(this.props);\r\n      // let background = \"\";\r\n      // switch (weather[displayIndex]) {\r\n      //   case \"Clear\":\r\n      //     background = \"clear\";\r\n      //     break;\r\n      //   case \"Cloudy\":\r\n      //     background = \"cloudy\";\r\n      //     break;\r\n      //   case \"Snow\":\r\n      //     background = \"snow\";\r\n      //     break;\r\n      //   case \"Rain\":\r\n      //     background = \"rain\";\r\n      //     break;\r\n      //   case \"Drizzle\":\r\n      //     background = \"rain\";\r\n      //     break;\r\n      //   case \"Thunderstorm\":\r\n      //     background = \"thunderstorm\";\r\n      //     break;\r\n      //   default:\r\n      //     background = \"cloudy\";\r\n      // }\r\n  \r\n      return (\r\n        <div >\r\n          <div className=\"result_row\" style={{justifyContent:\"center\"}}>\r\n          {this.props.info[0].next_days.map((day, index)=>\r\n           <h3 className=\"single_result\" onClick={()=> this.setState({displayIndex: index})}>\r\n             {day.name}\r\n           </h3>\r\n           \r\n          )}\r\n            \r\n          </div>\r\n          \r\n          <div className=\"tbl\">\r\n          <h3>Results :</h3>\r\n          <hr />\r\n\r\n          <div className=\"result_row\" id=\"titles\" style={{overflowY:'scroll',width:'1950px'}}>\r\n            <h3 className=\"single_result\" style={{ borderLeft: 'none' }}>\r\n              City\r\n            </h3>\r\n            <h3 className=\"single_result\">Weather</h3>\r\n            <h3 className=\"single_result\">Max Temp</h3>\r\n            <h3 className=\"single_result\">Min Temp</h3>\r\n            <h3 className=\"single_result\">Weather</h3>\r\n            <h3 className=\"single_result\">Max Temp</h3>\r\n            <h3 className=\"single_result\">Min Temp</h3>\r\n            <h3 className=\"single_result\">Weather</h3>\r\n            <h3 className=\"single_result\">Max Temp</h3>\r\n            <h3 className=\"single_result\">Min Temp</h3>\r\n            <h3 className=\"single_result\">Weather</h3>\r\n            <h3 className=\"single_result\">Max Temp</h3>\r\n            <h3 className=\"single_result\">Min Temp</h3>\r\n            <h3 className=\"single_result\">Weather</h3>\r\n            <h3 className=\"single_result\">Max Temp</h3>\r\n            <h3 className=\"single_result\">Min Temp</h3>\r\n            <h3 className=\"single_result\">Weather</h3>\r\n            <h3 className=\"single_result\">Max Temp</h3>\r\n            <h3 className=\"single_result\">Min Temp</h3>\r\n            <h3 className=\"single_result\">Weather</h3>\r\n            <h3 className=\"single_result\">Max Temp</h3>\r\n            <h3 className=\"single_result\">Min Temp</h3>\r\n            \r\n          </div>\r\n          {/* <div className=\"firstCol\" id=\"L_result\" >\r\n            {location.map((city) => (\r\n              \r\n            ))}\r\n          </div> */}\r\n          \r\n          {this.props.info.map((weather_data,i) => (\r\n            \r\n            <div className=\"finalCol\" id=\"result\" >\r\n              <div className=\"result_row \" id=\"weather_row\" style={{display:'inline-block'}}>\r\n                <h6 className=\"single_result\">\r\n                  <div className=\"result_row\" id=\"weather_row\">\r\n                \r\n              </div>\r\n                  <div><tr>\r\n                    <td><h3 className=\"single_result\" style={{ borderLeft: 'none' }}>\r\n                  {weather_data.region}\r\n                </h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[0].description}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[0].max_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[0].min_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[1].description}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[1].max_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[1].min_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[2].description}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[2].max_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[2].min_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[3].description}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[3].max_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[3].min_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[4].description}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[4].max_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[4].min_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[5].description}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[5].max_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[5].min_temperature}</h3></td>\r\n\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[6].description}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[6].max_temperature}</h3></td>\r\n                    <td><h3 className=\"single_result\">{weather_data.next_days[6].min_temperature}</h3></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                  </tr>\r\n                  <div></div>\r\n                  \r\n                    \r\n                  </div>\r\n                \r\n                  \r\n                </h6>\r\n                \r\n              </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n       \r\n        <br/>\r\n        <button\r\n          className=\"btn\"\r\n          style={{ marginLeft: '40%', height: '35px' }}\r\n          onClick={this.downloadTxtFile}\r\n        >\r\n          Export\r\n        </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Fivedays","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Fivedays from \"./Fivedays\"\r\nimport '../App.css'\r\nimport axios from 'axios'\r\nfunction Current() {\r\n    const history = useHistory()\r\n  const [cityName, setCityName] = useState('')\r\n  const [cities, setCities] = useState([]);\r\n  const [allCities, setAllCities] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [openKey, setOpenKey] = useState(false)\r\n  const [appiName, setApiName] = useState('')\r\n  const [apiKey, setApiKey] = useState('6486085a849f33ab16d294ebe45ac73d')\r\n  const [toggle,setToggle] = useState(true)\r\n  const downloadTxtFile = () => {\r\n\r\n    console.log(results);\r\n    console.log(\"*****\");\r\n    console.log(cities);\r\n    var exportArray=[];\r\n    results.forEach((element,index)=>{\r\n      var customStr=element[0].city+'=[\"'+element[0].takss+'\",\"'+element[0].celsius+'\",\"'+element[0].ferinheight+'\",\"'+element[0].winddeg+'\",\"'+element[0].windspeed+'\",\"'+element[0].humidity+'\",\"'+element[1]+'\",\"'+element[2]+'\"]\\n';\r\n      exportArray.push(customStr);\r\n      console.log(customStr);\r\n    });\r\n    console.log(exportArray);\r\n    // var arr = []\r\n    // var arr2 = []\r\n     const element = document.createElement('a')\r\n    // var b = document.getElementById('result').innerText\r\n    // var a = document.getElementById('L_result').innerText\r\n    // arr = a.split('\\n')\r\n    // arr2 = b.split('\\n')\r\n\r\n    // var i = 1\r\n    // var j = 1\r\n    // var count = 0\r\n    // arr = arr.filter(function (el) {\r\n    //   return el != null\r\n    // })\r\n    // arr2 = arr2.filter(function (el) {\r\n    //   return el != null\r\n    // })\r\n\r\n    // var endResult = ''\r\n    // console.log(arr2[12])\r\n    // for (i = 0; i < arr.length; i++) {\r\n    //   endResult = endResult.concat(arr[i] + '=')\r\n    //   for (j = count; j < arr2.length; j++) {\r\n    //     if (j % 6 === 0) {\r\n    //       endResult = endResult.concat('[')\r\n    //     }\r\n    //     if ((j + 1) % 6 !== 0 || j === 0) {\r\n    //       endResult = endResult.concat('\"' + arr2[j] + '\",')\r\n    //     } else if ((j + 1) % 6 === 0) {\r\n    //       endResult = endResult.concat('\"' + arr2[j] + '\"')\r\n    //     } else {\r\n    //       endResult = endResult.concat('\"' + arr2[j] + '\",')\r\n    //     }\r\n    //     if (j % 5 === 0 && j !== 0 && j < 2) {\r\n    //       endResult = endResult.concat(']\\n')\r\n    //       count++\r\n    //       break\r\n    //     }\r\n    //     if (j >= 2 && (j + 1) % 6 === 0 && j !== 0) {\r\n    //       endResult = endResult.concat(']\\n')\r\n    //       count++\r\n    //       break\r\n    //     }\r\n\r\n    //     count++\r\n    //   }\r\n    // }\r\n\r\n    const file = new Blob(exportArray, {\r\n      type: 'text/html',\r\n    })\r\n    element.href = URL.createObjectURL(file)\r\n    element.download = 'myFile.txt'\r\n    document.body.appendChild(element) // Required for this to work in FireFox\r\n    element.click()\r\n  }\r\n  const showFile = async (e) => {\r\n    e.preventDefault()\r\n    const reader = new FileReader()\r\n    reader.onload = async (e) => { \r\n      const text = (e.target.result)\r\n      console.log(text)\r\n      var lines = text.split('\\n');\r\n      var cityArray=[];\r\n      for(var line = 0; line < lines.length; line++){\r\n        console.log(lines[line]);\r\n        cityArray.push({name:lines[line].replace(/(\\r\\n|\\n|\\r)/gm, \"\"),\r\n      id:Math.random()})\r\n      }\r\n      setCities(cityArray)\r\n      e.target.value = null;\r\n      //alert(text)\r\n    };\r\n    reader.readAsText(e.target.files[0])\r\n  }\r\n  const totalList= async (data)=>{\r\n    \r\n    let promises = []\r\n    let sunrise=\"\"\r\n    let sunset=\"\"\r\n    let weatherResults = []\r\n    let cityWeatherData;\r\n   const a =  axios.get(`https://api.openweathermap.org/data/2.5/forecast/daily?q=${data.city}&unit=metrics&appid=bc1301b0b23fe6ef52032a7e5bb70820`)\r\n    .then(async (res) => {\r\n          console.log(res);\r\n          // const sunrise1=res.data.list[0].sunrise;\r\n          var sunriseObject = new Date( (res.data.list[0].sunrise+(res.data.city.timezone))*1000);\r\n          var sunsetObject = new Date( (res.data.list[0].sunset+(res.data.city.timezone))*1000);\r\n          var sunrise=sunriseObject.getUTCHours()+\":\"+sunriseObject.getUTCMinutes();\r\n          var sunset=sunsetObject.getUTCHours()+\":\"+sunsetObject.getUTCMinutes();\r\n\r\n\r\n\r\n\r\n          // console.log(myDate.getUTCHours()+\"<br>\"+myDate.getUTCMinutes()+\" \"+myDate.toLocaleString());\r\n          // console.log(res.data.list[0].sunrise);\r\n          // console.log(res.data.list[0].sunset);\r\n          // const sunset2=res.data.list[0].sunset\r\n        //   const  num1= parseInt(sunrise1)\r\n        //   const  num2= parseInt(sunset2)\r\n        //   const milliseconds1 = num1 * 1000 // 1575909015000\r\n        //   const milliseconds2 = num2 * 1000 // 1575909015000\r\n          \r\n        //   const dateObject1 = new Date(milliseconds1)\r\n        //   const dateObject2 = new Date(milliseconds2)\r\n        //   const time1=dateObject1.getTime()\r\n        //   const time2=dateObject2.getTime()\r\n\r\n          \r\n        //   var seconds = Math.floor((time1 / 1000) % 60)\r\n        //   var minutes = Math.floor((time1 / (1000 * 60)) % 60)\r\n        //   var hours = Math.floor((time1 / (1000 * 60 * 60)) % 24);\r\n      \r\n        // hours = (hours < 10) ? \"0\" + hours : hours;\r\n        // minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n        // seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n      \r\n        // sunrise=hours + \":\" + minutes ;\r\n\r\n        //   var seconds3 = Math.floor((time2 / 1000) % 60)\r\n        //   var minutes3 = Math.floor((time2 / (1000 * 60)) % 60)\r\n        //   var hours3 = Math.floor((time2 / (1000 * 60 * 60)) % 24);\r\n      \r\n        // hours3= (hours3 < 10) ? \"0\" + hours3 : hours3;\r\n        // minutes3 = (minutes3 < 10) ? \"0\" + minutes3 : minutes3;\r\n        // seconds3 = (seconds3 < 10) ? \"0\" + seconds3 : seconds3;\r\n      \r\n        // sunset=hours3 + \":\" + minutes3  ;\r\n        //sunrise = time1.toLocaleString()\r\n        //sunset = time2.toLocaleString()\r\n      //  const efr= await axios.get('http://localhost:3001/data').then(res=>{\r\n      //     console.log(res);\r\n        \r\n\r\n      //   },err=>{\r\n      //     console.log(err);\r\n      //   })\r\n\r\n      let response = () => {\r\n        return new Promise(function(resolve, reject) {\r\n          axios.post('https://react.weatherengine.online:3001/data/'+data.city, {\r\n            City:data.city\r\n          }).then(response => {\r\n            console.log(response);\r\n            \r\n            resolve(response.data);\r\n          });\r\n        });\r\n      };\r\n      let responseData = await response();\r\n      var a=JSON.parse(responseData);\r\n            console.log(a);\r\n            // setAllCities({\r\n            //   data:[a]\r\n            // });\r\n            // setAllCities({\r\n            //   data:[a]\r\n            // });\r\n            setAllCities(allCities=>[...allCities,a.weather_data[0]])\r\n            console.log(allCities);\r\n      // console.log(responseData);\r\n      // var b=JSON.stringify(a);\r\n      // console.log(b);\r\n      // var c=JSON.parse('['+b+']');\r\n      // console.log(c);\r\n      console.log(responseData);\r\n      cityWeatherData={\r\n        city:a.weather_data[0].region,\r\n        celsius: a.weather_data[0].temp_now,\r\n      ferinheight: (a.weather_data[0].temp_now*9/5) + 32,\r\n        humidity: a.weather_data[0].humidity,\r\n        takss: a.weather_data[0].next_days[0].description,\r\n        winddeg: data.cityWeatherData.winddeg,\r\n        windspeed: a.weather_data[0].wind\r\n      }  \r\n      console.log(data.cityWeatherData);\r\n        //cityWeatherData=data.cityWeatherData\r\n        console.log(cityWeatherData);\r\n        console.log(cityWeatherData);\r\n        return [cityWeatherData,sunrise,sunset];\r\n         \r\n    })\r\n    .catch((e) => {\r\n      console.log(\"error in fetching weather data\",e)  \r\n    })   \r\n    console.log(\"check\",a)\r\n    return a;\r\n    // axios({\r\n    //       method: 'get',\r\n    //       url: `https://api.openweathermap.org/data/2.5/forecast/daily?q=${data.city}&units=metric&appid=bc1301b0b23fe6ef52032a7e5bb70820`,\r\n    //     })\r\n    //   )\r\n    // Promise.all(promises)\r\n    //   .then((response) => {\r\n    //     console.log(response,\"Lorra lassan\")\r\n    //     sunrise=response[0].data.list[0].sunrise\r\n    //     sunset=response[0].data.list[0].sunset\r\n    //     let cityWeatherData=data.cityWeatherData\r\n    //     return [ cityWeatherData, sunrise,sunset ]\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error)\r\n    //   })\r\n      \r\n     }\r\n  const getweather =  (city) => {\r\n    setAllCities([]);\r\n    let promises = []\r\n    cities.map((city) => {\r\n      promises.push(\r\n        axios({\r\n          method: 'get',\r\n          url: `https://api.openweathermap.org/data/2.5/find?q=${city.name}&APPID=${apiKey}&units=metric`,\r\n        })\r\n      )\r\n    })\r\n    Promise.all(promises)\r\n      .then((response) => {\r\n        let weatherResults = []\r\n        response.map( async (res) => {\r\n          const cityWeatherData = TownWeather(res.data)\r\n          let a={\r\n            cityWeatherData,\r\n            city:res.data.list[0].name\r\n          }\r\n          const alpha = await totalList(a)\r\n          console.log('weather results are :', alpha)\r\n          weatherResults.push(alpha)\r\n        setResults([...weatherResults])\r\n\r\n        })\r\n        \r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n      \r\n  }\r\n  \r\n    const setter=(res)=>{\r\n      // sunrise=response[0].data.list[0].sunrise\r\n      // sunset=response[0].data.list[0].sunset\r\n    }\r\n  const TownWeather = (data, name) => {\r\n    console.log('data is ', data)\r\n    var takss = data.list[0].weather[0].description\r\n    if (takss === 'few clouds') {\r\n      takss = 'sun clouds'\r\n    }\r\n    if (takss === 'few clouds: 11-25%') {\r\n      takss = 'sun clouds'\r\n    } else if (takss === 'Partly Cloudy') {\r\n      takss = 'sun clouds'\r\n    } else if (takss === 'partly cloudy (night)') {\r\n      takss = 'moon clouds'\r\n    } else if (takss === 'Mostly cloudy (day)') {\r\n      takss = 'heavy clouds sun'\r\n    } else if (takss === 'mostly cloudy (night)') {\r\n      takss = 'heavy clouds moon'\r\n    } else if (takss === 'scattered clouds: 25-50%') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'broken clouds') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'fog') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'overcast clouds') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'scattered clouds') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'broken clouds') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'overcast clouds') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'mist') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'light snow') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Snow') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Snow') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Heavy snow') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Sleet') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Light shower sleet') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Shower sleet') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Light rain and snow') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Rain and snow') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Light shower snow') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Shower snow') {\r\n      takss = 'snow'\r\n    } else if (takss === 'Heavy shower snow') {\r\n      takss = 'snow'\r\n    } else if (takss === 'light intensity drizzle') {\r\n      takss = 'rain'\r\n    } else if (takss === 'drizzle') {\r\n      takss = 'rain'\r\n    } else if (takss === 'heavy intensity drizzle') {\r\n      takss = 'rain'\r\n    } else if (takss === 'light intensity drizzle rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'drizzle rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'heavy intensity drizzle rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'shower rain and drizzlen') {\r\n      takss = 'rain'\r\n    } else if (takss === 'heavy shower rain and drizzle') {\r\n      takss = 'rain'\r\n    } else if (takss === 'shower drizzle') {\r\n      takss = 'rain'\r\n    } else if (takss === 'light rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'moderate rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'heavy intensity rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'very heavy rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'extreme rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'freezing rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'light intensity shower rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'shower rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'heavy intensity shower rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'ragged shower rain\t') {\r\n      takss = 'rain'\r\n    } else if (takss === 'shower rain') {\r\n      takss = 'rain'\r\n    } else if (takss === 'Clear') {\r\n      takss = 'sun'\r\n    } else if (takss === 'Clear (night)') {\r\n      takss = 'moon'\r\n    } else if (takss === 'hot') {\r\n      takss = 'sun'\r\n    } else if (takss === 'clear (day)') {\r\n      takss = 'sun'\r\n    } else if (takss === 'clear (night)') {\r\n      takss = 'moon'\r\n    } else if (takss === 'clear sky (night)') {\r\n      takss = 'moon'\r\n    } else if (takss === 'clear sky (day)') {\r\n      takss = 'sun'\r\n    } else if (takss === 'thunderstorm with light rain') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'thunderstorm with rain') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'thunderstorm with heavy rain') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'light thunderstorm') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'thunderstorm') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'heavy thunderstorm') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'ragged thunderstorm') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'thunderstorm with light drizzle') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'tropical storm') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'Severe Thunderstorms') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'thunderstorm with drizzle') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'thunderstorm with heavy drizzle') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'thundershowers') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'isolated thundershowers') {\r\n      takss = 'thunders'\r\n    } else if (takss === 'Undefined') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'Mostly Clear') {\r\n      takss = 'sun clouds'\r\n    } else if (takss === 'Mostly Cloudy') {\r\n      takss = 'heavy clouds sun'\r\n    } else if (takss === 'Sunny') {\r\n      takss = 'sun'\r\n    } else if (takss === 'clear sky') {\r\n      takss = 'sun'\r\n    } else if (takss === 'Breezy') {\r\n      takss = 'clouds'\r\n    } else if (takss === 'Mostly Sunny') {\r\n      takss = 'sun clouds'\r\n    } else if (takss === 'Rain') {\r\n      takss = 'rain'\r\n    }\r\n\r\n    // Temp celsius\r\n\r\n    var celsius = Math.round(data.list[0].main.temp)\r\n\r\n    // Temp ferinheight\r\n    var ferinheight = Math.round(data.list[0].main.temp * 1.8 + 32)\r\n\r\n    if (celsius.toString().length < 2) celsius = '0' + celsius\r\n    // humidity\r\n    var humidity = data.list[0].main.humidity\r\n    // windspeed\r\n    var windspeed = data.list[0].wind.speed\r\n    // winddeg\r\n    var winddeg = data.list[0].wind.deg\r\n\r\n    return { takss, celsius, windspeed, winddeg, ferinheight, humidity }\r\n  }\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"Header\">\r\n        <div\r\n          className=\"key\"\r\n          style={{ color: 'white' }}\r\n          onClick={() => setOpenKey(!openKey)}\r\n        >\r\n          \r\n          <img src=\"images/key.png\" alt=\"no-key\" width=\"50\" height=\"50\" />\r\n        </div>\r\n        {openKey && (\r\n          <div className=\"header-input\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-box\"\r\n              // value={appiName}\r\n              onChange={(e) => setApiName(e.target.value)}\r\n            />\r\n            <img\r\n              src=\"images/add.png\"\r\n              alt=\"no-add\"\r\n              height=\"40\"\r\n              width=\"40\"\r\n              style={{ padding: '10px', verticalAlign: 'middle' }}\r\n              onClick={() => {\r\n                setApiKey(appiName);\r\n                setOpenKey(!openKey)\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"content\">\r\n      {toggle &&(\r\n        <div className=\"result_row\" style={{minWidth:\"60%\"}}>\r\n          <input\r\n          type=\"text\"\r\n          value={cityName}\r\n          onChange={(e) => setCityName(e.target.value)}\r\n        />\r\n        <img\r\n          src=\"images/add.png\"\r\n          alt=\"no-add\"\r\n          height=\"40\"\r\n          width=\"40\"\r\n          style={{ paddingLeft: '10px' }}\r\n          onClick={() => {\r\n            const city = { name: cityName, id: Math.random() }\r\n            setCities([...cities, city])\r\n          }}\r\n        />\r\n        </div>\r\n      )}\r\n        \r\n        {toggle &&(\r\n        <div className=\"gallery\">\r\n          <img\r\n            src=\"images/weather.png\"\r\n            alt=\"no-weather\"\r\n            height=\"170\"\r\n            width=\"170\"\r\n            className=\"image\"\r\n          />\r\n          <h3 className=\"get\" onClick={getweather}>\r\n            GET <br />\r\n            Weather\r\n          </h3>\r\n        </div>\r\n        )}\r\n        <br />\r\n        <div className=\"last-col\">\r\n          <button \r\n          className=\"red-btn\" \r\n          onClick={()=>{\r\n            setToggle(true)\r\n          }}\r\n          >Current Weather</button>\r\n          <button \r\n          className=\"black-btn\" \r\n          onClick={()=>{\r\n            if(allCities.length!==0){\r\n              setToggle(false)\r\n            }\r\n            else{\r\n              window.alert(\"Enter cities first\")\r\n            }\r\n          }}\r\n          >5 Day Forecast</button>\r\n        </div>\r\n      </div>\r\n      {toggle &&(\r\n        <div className=\"bottom\">\r\n        <div className=\"left\" id=\"Lresult\">\r\n          <h3>City</h3>\r\n          <hr />\r\n          <div className=\"city\">\r\n            <h3>City name</h3>\r\n            <h3>Actions</h3>\r\n          </div>\r\n          {cities.map((city) => (\r\n            <div className=\"city\">\r\n              <h3>{city.name}</h3>\r\n              <img\r\n                src=\"images/remove.png\"\r\n                alt=\"no-remove\"\r\n                height=\"40\"\r\n                width=\"40\"\r\n                className=\"actionbtn\"\r\n                style={{ paddingLeft: '5px' }}\r\n                onClick={() => {\r\n                  const filteredCities = cities.filter((c) => c.id !== city.id)\r\n                  setCities(filteredCities)\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"right\">\r\n          <h3>Results :</h3>\r\n          <hr />\r\n\r\n          <div className=\"result_row\" id=\"titles\">\r\n            <h3 className=\"single_result\" style={{ borderLeft: 'none' }}>\r\n              City\r\n            </h3>\r\n            <h3 className=\"single_result\">Condition</h3>\r\n            <h3 className=\"single_result\">celsius</h3>\r\n            <h3 className=\"single_result\">fahrenheight</h3>\r\n            <h3 className=\"single_result\">Wind-Deg</h3>\r\n            <h3 className=\"single_result\">WindSpeed</h3>\r\n            <h3 className=\"single_result\">Humidity</h3>\r\n            <h3 className=\"single_result\">Sunrise</h3>\r\n            <h3 className=\"single_result\">Sunset</h3>\r\n          </div>\r\n          <div className=\"firstCol\" id=\"L_result\">\r\n            {results.map((city) => (\r\n              <div className=\"result_row\" id=\"weather_row\">\r\n                <h3 className=\"single_result\" style={{ borderLeft: 'none' }}>\r\n                {city[0].city}\r\n                </h3>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"finalCol\" id=\"result\">\r\n            {results.map((result) => (\r\n              <div className=\"result_row\" id=\"weather_row\">\r\n               \r\n            \r\n{/*              \r\n                <h3 className=\"single_result\" style={{ borderLeft: 'none' }}>\r\n                {result[0].city}\r\n                </h3> */}\r\n         \r\n     \r\n                {/* <h3 className=\"single_result\">{result[0].city}</h3> */}\r\n                <h3 className=\"single_result\">{result[0].takss}</h3>\r\n                <h3 className=\"single_result\">{result[0].celsius}</h3>\r\n                <h3 className=\"single_result\">{result[0].ferinheight}</h3>\r\n                <h3 className=\"single_result\">{result[0].winddeg}</h3>\r\n                <h3 className=\"single_result\">{result[0].windspeed}</h3>\r\n                <h3 className=\"single_result\">{result[0].humidity}</h3>\r\n                <h3 className=\"single_result\">{result[1]}</h3>\r\n                <h3 className=\"single_result\">{result[2]}</h3>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )}\r\n      {!toggle&&(\r\n        <div>\r\n          <Fivedays info={allCities} />\r\n        </div>\r\n      )}\r\n      \r\n      {toggle &&(\r\n        <div className=\"buttons\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n           \r\n            console.log(cities);\r\n            var exportArray=[];\r\n            cities.forEach((element,index)=>{\r\n              var customStr=element.name+'\\n';\r\n              exportArray.push(customStr);\r\n              console.log(customStr);\r\n            });\r\n            console.log(exportArray);\r\n           \r\n             const element = document.createElement('a')\r\n            \r\n        \r\n            const file = new Blob(exportArray, {\r\n              type: 'text/html',\r\n            })\r\n            element.href = URL.createObjectURL(file)\r\n            element.download = 'cities.txt'\r\n            document.body.appendChild(element) // Required for this to work in FireFox\r\n            element.click()\r\n          }}\r\n        >\r\n          Save\r\n        </button>\r\n        <input style={{marginLeft:'25px'}} type=\"file\" onChange={(e) => showFile(e)} />\r\n        {/* <button\r\n          className=\"btn\"\r\n          style={{ marginLeft: '5%' }}\r\n          onClick={() => {\r\n            console.log(localStorage.getItem('cities'))\r\n            const savedCities = JSON.parse(localStorage.getItem('cities'))\r\n            if (savedCities) setCities(savedCities)\r\n          }}\r\n        >\r\n          Load\r\n        </button> */}\r\n        <button\r\n          className=\"btn\"\r\n          style={{ marginLeft: '40%', height: '35px' }}\r\n          onClick={downloadTxtFile}\r\n        >\r\n          Export\r\n        </button>\r\n      </div>\r\n      )}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Current\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport './App.css';\r\n\r\nimport Current from './Pages/Current'\r\nimport Fivedays from './Pages/Fivedays'\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Current/>\r\n          </Route>\r\n          <Route exact path='/Current'>\r\n            <Current/> \r\n          </Route>\r\n          <Route exact path='/Fivedays'>\r\n            <Fivedays/>\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}